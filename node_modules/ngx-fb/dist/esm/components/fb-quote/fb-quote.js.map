{"version":3,"sources":["../../../../src/components/fb-quote/fb-quote.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAO,UAAA,EAAY,SAAA,EAAU,MAAO,eAAA,CAAgB;AACxE,OAAO,EAAE,aAAA,EAAe,aAAA,EAAc,MAAO,mBAAA,CAAoB;AAEjE;;;;;;;;;;;GAWG;AAEH;IAAsC,oCAAa;IAiBjD,0BACE,EAAc,EACd,GAAc;eAEd,kBAAM,EAAE,EAAE,GAAG,EAAE,UAAU,CAAC;IAC5B,CAAC;IAEI,2BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,UAAU;oBACpB,QAAQ,EAAE,EAAE;iBACb,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,+BAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;QACpB,EAAC,IAAI,EAAE,SAAS,GAAG;KAClB,EAH6F,CAG7F,CAAC;IACK,+BAAc,GAA2C;QAChE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC1B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;KAC3B,CAAC;IA9BA;QADC,aAAa;;kDACD;IAOb;QADC,aAAa;;oDACC;IAwBjB,uBAAC;CAvCD,AAuCC,CAvCqC,aAAa,GAuClD;SAvCY,gBAAgB","file":"fb-quote.js","sourceRoot":"","sourcesContent":["import { Component, Input, ElementRef, Renderer2 } from '@angular/core';\nimport { FBMLAttribute, FBMLComponent } from '../fbml-component';\n\n/**\n * @name Quote Plugin\n * @shortdesc Quote plugin component\n * @fbdoc https://developers.facebook.com/docs/plugins/quote\n * @description\n * The quote plugin lets people select text on your page and add it to their share, so they can tell a more expressive story.\n * Note that you do not need to implement Facebook login or request any additional permissions through app review in order to use this plugin.\n * @usage\n * ```html\n * <fb-quote></fb-quote>\n * ```\n */\n\nexport class FBQuoteComponent extends FBMLComponent {\n\n  /**\n   * The absolute URL of the page that will be quoted.\n   * Defaults to the current URL\n   */\n  \n  @FBMLAttribute\n  href: string;\n\n  /**\n   * Can be set to quote or button. Defaults to quote.\n   */\n  \n  @FBMLAttribute\n  layout: string;\n\n  constructor(\n    el: ElementRef,\n    rnd: Renderer2\n  ) {\n    super(el, rnd, 'fb-quote');\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'fb-quote',\n  template: ''\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'href': [{ type: Input },],\n'layout': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}